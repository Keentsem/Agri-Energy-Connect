@{
    ViewData["Title"] = "Smart Search";
    // ST10391223 - Smart Search View
    // Created: May 14, 2025
    // This was one of the trickiest views to implement - especially the role-based login!
    
    // LECTURE REFERENCE: Using client-side interaction techniques from week 8
    // TODO before submission: Fix alignment issues on search filters section
    // FEEDBACK from peer review: "Role selection is intuitive but could use more visual feedback"
}

<link rel="stylesheet" href="~/css/pixel-theme.css" />

<!-- Main container with page transition effect -->
<!-- Used subtle slide-in animation as suggested in animation workshop -->
<div class="container page-transition">
    <!-- Navigation -->
    <nav class="pixel-nav mb-4">
        <div class="container d-flex justify-content-between align-items-center">
            <ul class="nav">
                <li class="nav-item">
                    <a class="pixel-nav-link" href="/">
                        <img src="~/images/eco_baby.png" alt="Home" class="pixel-nav-icon" />
                        Home
                    </a>
                </li>
                <li class="nav-item">
                    <a class="pixel-nav-link active" href="#">
                        <img src="~/images/search_icon.png" alt="Search" class="pixel-nav-icon" />
                        Smart Search
                    </a>
                </li>
            </ul>
        </div>
    </nav>
    
    <!-- Header Section -->
    <!-- Using magnify_corn.png as requested in the project specs -->
    <!-- This was a custom sprite I had to create - took a while to get right! -->
    <section class="pixel-section-header">
        <img src="~/images/magnify_corn.png" alt="Smart Search" class="pixel-header-icon" />
        <h1 class="pixel-header-title">Smart Search</h1>
    </section>

    <!-- Description -->
    <!-- Used the pixel border class I created in my custom CSS -->
    <!-- The explanation text was based on user feedback from initial testing -->
    <div class="pixel-border mb-4">
        <h2 class="text-center mb-3" style="color: #2e8687;">Advanced Search System</h2>
        <p>
            Welcome to the Smart Search system. Please log in to access our advanced search functionality which allows you
            to find specific agricultural products, production data, and related information.
        </p>
    </div>

    <!-- Login Options Section - Shown by default -->
    <!-- Based on the dual-path navigation pattern from UX lecture -->
    <!-- Initially had a dropdown instead but lecturer suggested cards for better UX -->
    <div id="login-options-section">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <h3 class="text-center mb-4" style="color: #2e8687;">Select Your Role</h3>
                
                <div class="row">
                    <div class="col-md-6 mb-4">
                        <!-- Farmer login card with hover effect -->
                    <!-- Had issues with hover effect on mobile - finally fixed it! -->
                    <div class="pixel-card text-center h-100 pixel-hover-effect" onclick="showLoginForm('farmer')">
                            <img src="~/images/farmer_icon.png" alt="Farmer" class="pixel-card-icon" />
                            <h4 class="pixel-card-title">Farmer Login</h4>
                            <p class="pixel-card-text">Access the search system with farmer privileges to manage your products and view your production data.</p>
                            <button class="pixel-btn">Login as Farmer</button>
                        </div>
                    </div>
                    <div class="col-md-6 mb-4">
                        <!-- Employee login card with hover effect -->
                    <!-- Used the employee sprite as suggested in class critique -->
                    <div class="pixel-card text-center h-100 pixel-hover-effect" onclick="showLoginForm('employee')">
                            <img src="~/images/sprite_clipboard_employee.png" alt="Employee" class="pixel-card-icon" />
                            <h4 class="pixel-card-title">Employee Login</h4>
                            <p class="pixel-card-text">Access the search system with employee privileges to view all farmers and products data.</p>
                            <button class="pixel-btn">Login as Employee</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Login Form Section - Hidden by default -->
    <!-- Used display:none pattern instead of ngIf as we're not using Angular -->
    <!-- Struggled with the toggle implementation but got it working! -->
    <div id="login-form-section" style="display: none;">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="pixel-border">
                    <h3 class="text-center mb-4" id="login-form-title">Login</h3>
                    <form id="login-form">
                        <div class="form-group">
                            <label for="username">Username</label>
                            <input type="text" class="form-control" id="username" placeholder="Enter your username" required>
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <input type="password" class="form-control" id="password" placeholder="Enter your password" required>
                        </div>
                        <div class="text-center mt-4">
                            <button type="button" class="pixel-btn" onclick="simulateLogin()">
                                <img src="~/images/secure_lock.png" alt="Login" style="width: 20px; height: 20px; margin-right: 5px;">
                                Login
                            </button>
                            <button type="button" class="btn btn-secondary ml-3" onclick="backToOptions()">
                                Back
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Search Results Section - Hidden by default -->
    <!-- This entire section is shown after successful login -->
    <!-- Based on the progressive disclosure pattern from UX lecture -->
    <div id="search-results-section" style="display: none;">
        <div class="row mb-4">
            <div class="col-12">
                <div class="pixel-border">
                    <div class="d-flex align-items-center mb-3">
                        <img src="~/images/magnify_corn.png" alt="Search" style="width: 48px; height: 48px; margin-right: 15px;" />
                        <h4 style="color: #2e8687; margin: 0;">Search Produce Database</h4>
                    </div>
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Search by product name, category, farmer..." id="search-input">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" onclick="performSearch()">
                                <!-- Using the magnify_corn.png sprite as required in project spec -->
                    <!-- Scaled down version for the button - better proportion -->
                    <img src="~/images/magnify_corn.png" alt="Search" style="width: 20px; height: 20px;">
                                Search
                            </button>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" id="filter-vegetables" checked>
                            <label class="form-check-label" for="filter-vegetables">Vegetables</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" id="filter-fruits" checked>
                            <label class="form-check-label" for="filter-fruits">Fruits</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" id="filter-grains" checked>
                            <label class="form-check-label" for="filter-grains">Grains</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" id="filter-dairy" checked>
                            <label class="form-check-label" for="filter-dairy">Dairy</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Search results row using flexbox/grid layout -->
        <!-- Initially used a list but cards provide better visual hierarchy (UX lecture) -->
        <div class="row" id="search-results">
            <!-- Search Result Items -->
            <div class="col-md-4 mb-4">
                <div class="pixel-card h-100">
                    <div class="d-flex mb-3">
                        <img src="~/images/crate_of_crops.png" alt="Corn" style="width: 64px; height: 64px; margin-right: 15px;" />
                        <div>
                            <h5 style="color: #2e8687;">Sweet Corn</h5>
                            <p class="text-muted">Vegetable</p>
                        </div>
                    </div>
                    <p><strong>Farmer:</strong> Green Valley Farms</p>
                    <p><strong>Quantity:</strong> 2,500 kg</p>
                    <p><strong>Energy Usage:</strong> <span class="badge badge-success">Low Impact</span></p>
                    <p><strong>Production Date:</strong> 2024-06-05</p>
                    <div class="text-center mt-3">
                        <a href="#" class="pixel-btn btn-sm">View Details</a>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4 mb-4">
                <div class="pixel-card h-100">
                    <div class="d-flex mb-3">
                        <img src="~/images/crate_of_crops.png" alt="Tomatoes" style="width: 64px; height: 64px; margin-right: 15px;" />
                        <div>
                            <h5 style="color: #2e8687;">Roma Tomatoes</h5>
                            <p class="text-muted">Vegetable</p>
                        </div>
                    </div>
                    <p><strong>Farmer:</strong> Sunrise Acres</p>
                    <p><strong>Quantity:</strong> 1,800 kg</p>
                    <p><strong>Energy Usage:</strong> <span class="badge badge-success">Low Impact</span></p>
                    <p><strong>Production Date:</strong> 2024-06-10</p>
                    <div class="text-center mt-3">
                        <a href="#" class="pixel-btn btn-sm">View Details</a>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4 mb-4">
                <div class="pixel-card h-100">
                    <div class="d-flex mb-3">
                        <img src="~/images/crate_of_crops.png" alt="Wheat" style="width: 64px; height: 64px; margin-right: 15px;" />
                        <div>
                            <h5 style="color: #2e8687;">Spring Wheat</h5>
                            <p class="text-muted">Grain</p>
                        </div>
                    </div>
                    <p><strong>Farmer:</strong> Golden Fields</p>
                    <p><strong>Quantity:</strong> 5,200 kg</p>
                    <p><strong>Energy Usage:</strong> <span class="badge badge-warning">Medium Impact</span></p>
                    <p><strong>Production Date:</strong> 2024-05-20</p>
                    <div class="text-center mt-3">
                        <a href="#" class="pixel-btn btn-sm">View Details</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Client-side JavaScript for handling the login simulation and search functionality
    // Based on the client-side interaction techniques from week 8 lecture
    // TODO: In a real app, this would connect to a proper authentication system
    
    // Track which role the user selected
    let currentRole = '';

    // Function to show the appropriate login form based on selected role
    // Had to debug this several times to get the display toggling right
    function showLoginForm(role) {
        currentRole = role;
        document.getElementById('login-options-section').style.display = 'none';
        document.getElementById('login-form-section').style.display = 'block';
        document.getElementById('login-form-title').textContent = role === 'farmer' ? 'Farmer Login' : 'Employee Login';
    }

    // Allow users to go back to role selection
    // Added this after user testing showed people wanted a back button
    function backToOptions() {
        document.getElementById('login-options-section').style.display = 'block';
        document.getElementById('login-form-section').style.display = 'none';
    }

    // Simulate login process - in production this would verify credentials
    // Just doing simple validation for the demo as discussed in class
    function simulateLogin() {
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;
        
        if (username && password) {
            // Hide login form and show search results
            document.getElementById('login-form-section').style.display = 'none';
            document.getElementById('search-results-section').style.display = 'block';
        } else {
            alert('Please enter both username and password');
        }
    }

    // Basic search functionality - just an alert for the demo
    // In a real implementation this would filter the actual results
    // Will enhance this in the next version with real search logic
    function performSearch() {
        const searchTerm = document.getElementById('search-input').value;
        // In a real app, this would actually filter the results
        
        if (searchTerm) {
            alert('Searching for: ' + searchTerm);
        }
    }
</script>
